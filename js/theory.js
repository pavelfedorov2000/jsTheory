'use strict'; // Эта директива означает, что мы будем писать на стандарте ES6. Единственное ограничение - IE 9 версии и ниже.

a = 5;
console.log(a);

// Способы объявления переменной
var leftPadding = 1;
// стандарт ES6
let firstItem = 2; // let создается только тогда, когда код до нее доходит
const pi = 3.14; // это константа
// Вывод в консоль
console.log(leftPadiing);
console.log(firstItem);
console.log(pi);

// Типы данных
var number = 5; // Числа (целые или дробные)
var string = "Hello world!"; // Это строка. Кавычки обязательны (причем двойные или одинарные - не важно)!
var sym = Symbol(); // Символы (редко)
var boolean = true; // Логические операторы (правда / ложь)
null; // Когда чего-то в коде не существует, т.е. по сути это ссылка на несуществующий объект
undefined; // Когда какой-то объект уже существует в коде, но значения никакого не имеет
var obj = {}; // Объект - структура, которая используется для хранения любых типов данных, т.е. это коллекция данных. Объект в фигурных скобках может содержать свойства и методы (методы - действия, которые может совершать объект)

// Это все числовые значения
console.log(4/0); // В консоле выведется Infinity (бесконечность)
console.log('string'*9); // В консоле выведется NaN (not a number)

let something; //undefined
console.log(something); //null

// Объект с тремя свойствами
let person = {
    name: "John",
    age: 25,
    isMarried: false
}

// Способы получения свойств объекта
console.log(person.name); // 1 способ: Обращаемся сначала к самому объекту, а потом через точку к одному из его свойств. В консоле выведется имя объекта John
console.log(person["name"]); // 2 способ - используется реже, когда мы хотим добраться до любого свойства, заданного строкой

let arr = ['plum.png','orange.jpg','apple.bmp']; // Массив - частный случай объекта. Используется для хранения данных, которые идут по порядку. Каждому значению массива автоматически присваивается порядковый номер. Массив может содержать любые типы данных (числа, функции, объекты и т.д.)
console.log(arr[2]); // В консоле выведется apple.bmp, потому что нумерация в JS начинается не с 1, а с 0!!!

alert("Hello world!"); // самое простое модальное окно. До того как пользователь не нажмет на кнопку ОК все скрипты на сайте приостанавливаются!
confirm("Are you here?"); //Вопрос
let answer = confirm("Are you here?");
console.log(answer); // При клике по ОК в консоле выведется true (правда), а при клике Отмена - false (ложь)
let answer = prompt("Вам есть 18 лет?", "Да"); // Модальное окно с полем ввода. Через запятую можно указать возможные варианты ответов. При этом любое введенное пользователем значение является СТРОКОЙ!
console.log(typeof(arr)); // Определение типа данных, введенных пользователем. В консоле выведется object - т.к. массив - это как раз частный случай объекта.

// ОПЕРАТОРЫ
console.log("arr" + " - object"); // cложение двух строк
console.log(4 + " - object"); // сложение числа и строки все равно даст строку!
let answer = +prompt("Вам есть 18 лет?", "Да"); // + превращает строку в число!
console.log(typeof(answer)); // Определение типа данных, введенных пользователем. В консоле выведется number, т.к. + перед prompt превратил строку в число.

let incr = 10, // инкремент - увеличение на 1
    decr = 10; // декремент - уменьшение на 1
incr++;
decr--;
console.log(incr);
console.log(decr);

console.log(++incr); // префиксная форма
console.log(--decr);

console.log(incr++); // постфиксная форма
console.log(decr--);

console.log(5%2); // вывод остатка от деления 5 на 2
console.log("2" = 2); // простое присваивание
console.log("2" == 2); // проверка на равенство - будет true (2 = 2 - значение строки равно значению числа)
console.log("2" === 2); // строгая проверка по типам данных - выведется false (строка это не число) 

// Операторы И / ИЛИ
let isChecked = true,
    isClose = true;
console.log(isChecked && isClose); // && - оператор "и" - возвращает правду только тогда, когда ВСЕ аргументы правдивы. Оба значения переменных true, поэтому в результате получим true. Запинается на первой лжи!
let isChecked = true,
    isClose = false;
console.log(isChecked && isClose); // одно значение лживо, поэтому будет false.
console.log(isChecked || isClose); // || - оператор "или" - возвращает true, если ХОТЯ БЫ ОДИН аргумент true. Запинается на первой правде!
let isChecked = false,
    isClose = false;
console.log(isChecked || isClose); // 2 false дают false!
console.log(isChecked || !isClose); // ! - оператор отрицания (обращает значение аргумента в обратное, т.е. правду в ложь, и наоборот). isClose изначально false, но ! меняет его на true, и в консоле уже будет снова true





